name: Make new release

on:
  pull_request:
    branches:
      - main
    types: [ opened, synchronize, labeled, unlabeled, reopened, edited ]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  semver_labels:
    name: Read semver labels from merged PR
    runs-on: ubuntu-latest
    outputs:
      semver_app: ${{ steps.semver_labels.outputs.semver_app }}
      skip_release: ${{ steps.semver_labels.outputs.skip_release }}
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 #v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./.github/actions/check-pr-semver-labels
        id: semver_labels
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
  semver_update:
    if: ${{needs.semver_labels.outputs.skip_release == 'False'}}
    name: Update semver for every eligible file of repo (helm charts, mvn files, etc.)
    runs-on: ubuntu-latest
    needs: semver_labels
    environment: prod
    outputs:
      app_version: ${{ steps.get_new_ver.outputs.version }}
    steps:
      # Without this step, changes would be applied to a detached head
      - name: Checkout release branch
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 #v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main
      # setup git author
      - name: Setup git author
        run: |
          git config --global user.email "${{ secrets.BOT_GIT_MAIL }}" && git config --global user.name "${{ secrets.BOT_GIT_USER }}"
        # bump version
      - name: Set up JDK 21
        uses: actions/setup-java@0ab4596768b603586c0de567f2430c30f5b0d2b0 # v3
        with:
          java-version: '21'
          distribution: 'corretto'
      - name: Get New App Version
        id: get_new_ver
        run: |
          RELEASE_APP_SEMVER=${{ needs.semver_labels.outputs.semver_app }}
          if [[ $RELEASE_APP_SEMVER = "patch" ]]
          then
            mvn -f pom.xml build-helper:parse-version versions:set '-DnewVersion=${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.nextIncrementalVersion}'
          elif [[ $RELEASE_APP_SEMVER = "minor" ]]
          then
            mvn -f pom.xml build-helper:parse-version versions:set '-DnewVersion=${parsedVersion.majorVersion}.${parsedVersion.nextMinorVersion}.0'
          elif [[ $RELEASE_APP_SEMVER = "major" ]]
          then
            mvn -f pom.xml build-helper:parse-version versions:set '-DnewVersion=${parsedVersion.nextMajorVersion}.0.0'
          fi
          git add pom.xml
          version=$(mvn -f pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo $version
          echo "version=$version" >> $GITHUB_OUTPUT
      - name: Push New Version
        #TODO remove explicit checkout main step, add just for test into open branch
        run: |
          git checkout main
          git diff --cached
          git commit -m "Bump version [skip ci]"
          git push origin 'main'
  github_release:
    if: ${{needs.semver_labels.outputs.skip_release == 'False'}}
    name: Create a New Github Release
    needs: semver_update
    runs-on: ubuntu-latest
    steps:
      - name: Checkout release branch
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 #v3
        with:
          persist-credentials: false
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: 'main'
      - name: Set Up Github Release
        id: setup_github_release
        run: |
          HEAD_SHA=$(git rev-parse HEAD)
          TAG="$chart_version"
          TITLE="Release ${{ needs.semver_update.outputs.app_version }}"
          echo "HEAD_SHA=$HEAD_SHA" >> $GITHUB_OUTPUT
          echo "TAG=$TAG" >> $GITHUB_OUTPUT
          echo "TITLE=$TITLE" >> $GITHUB_OUTPUT
        # create new github release
      - name: Create New Github Release
        uses: ncipollo/release-action@440c8c1cb0ed28b9f43e4d1d670870f059653174 #v1.16.0
        with:
          commit: ${{ steps.setup_github_release.outputs.HEAD_SHA }}
          tag: ${{ steps.setup_github_release.outputs.TAG }}
          name: ${{ steps.setup_github_release.outputs.TITLE }}
          token: ${{ secrets.GITHUB_TOKEN }}
          makeLatest: true
          generateReleaseNotes: true
          draft: false
          prerelease: false
      - name: Make Package
        id: package
        uses: pagopa/github-actions-template/maven-package@483a0ceb9ef07dee34f7ce0de5b689cc3043eac4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref_name }}