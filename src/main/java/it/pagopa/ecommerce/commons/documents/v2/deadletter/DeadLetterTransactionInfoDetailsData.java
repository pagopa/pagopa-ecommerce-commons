package it.pagopa.ecommerce.commons.documents.v2.deadletter;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;

/**
 * Extensible interface to handle multiple payment gateway transaction info data
 */
@JsonIgnoreProperties(
        value = "type", // ignore manually set detailType, it will be automatically generated by Jackson
        // during serialization
        allowSetters = true // allows the detailType to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "type", visible = false)
@JsonSubTypes(
    {
            @JsonSubTypes.Type(value = DeadLetterNpgTransactionInfoDetailsData.class, name = "NPG"),
            @JsonSubTypes.Type(value = DeadLetterRedirectTransactionInfoDetailsData.class, name = "REDIRECT"),
    }
)
public sealed interface DeadLetterTransactionInfoDetailsData permits DeadLetterNpgTransactionInfoDetailsData,DeadLetterRedirectTransactionInfoDetailsData {

    /**
     * Transaction info data type discriminator field enumeration
     */
    enum TransactionInfoDataType {
        /**
         * NPG data type
         */
        NPG,
        /**
         * REDIRECT data type
         */
        REDIRECT

    }

    /**
     * Get discriminator field enumeration value
     *
     * @return the detail type enumeration value associated to the current detail
     *         instance
     */
    TransactionInfoDataType getType();
}
